AWSTemplateFormatVersion: '2010-09-09'
Description: 'EKS Cluster for hosting zep-flink-on-aws'
Parameters:
  ParentVPCStack:
    Description: "Provide Stack name of parent VPC stack based on VPC-3AZs yaml template. Refer Cloudformation dashboard in AWS Console to get this."
    Type: String
    MinLength: "1"
    MaxLength: "128"
    AllowedPattern: '^[a-zA-Z]+[0-9a-zA-Z\-]*$'
  ClusterName:
      Type: String
  KubernetesVersion:
      Type: String
      AllowedValues: [ "1.13", "1.14", "1.15", "1.16" ]
      Default: "1.16"
      Description: The Kubernetes control plane version.
  EKSManagedPolicyArn:
      Type: String
      Default: "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
  NodeVolumeSize:
      Default: 50
      Description: Size for node volumes
      Type: String
  NodeInstanceType:
      Default: t3.medium
      AllowedValues:
        - t3.nano
        - t3.micro
        - t3.small
        - t3.medium
        - t3.large
        - t3.xlarge
        - t3.2xlarge
        - m5.large
        - m5.xlarge
        - m5.2xlarge
        - m5.4xlarge
        - m5.12xlarge
        - m5.24xlarge
        - c5.large
        - c5.xlarge
        - c5.2xlarge
        - c5.4xlarge
        - c5.9xlarge
        - c5.18xlarge
        - i3.large
        - i3.xlarge
        - i3.2xlarge
        - i3.4xlarge
        - i3.8xlarge
        - i3.16xlarge
        - x1.16xlarge
        - x1.32xlarge
        - p3.2xlarge
        - p3.8xlarge
        - p3.16xlarge
        - r5.large
        - r5.xlarge
        - r5.2xlarge
        - r5.4xlarge
        - r5.12xlarge
        - r5.24xlarge
        - r5d.large
        - r5d.xlarge
        - r5d.2xlarge
        - r5d.4xlarge
        - r5d.12xlarge
        - r5d.24xlarge
        - z1d.large
        - z1d.xlarge
        - z1d.2xlarge
        - z1d.3xlarge
        - z1d.6xlarge
        - z1d.12xlarge
      ConstraintDescription: Must be a valid EC2 instance type
      Type: String
Resources:
  eksClusterSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Cluster Security Group
      VpcId: { "Fn::ImportValue": !Sub "${ParentVPCStack}-VPC" }
      GroupName: ZepFlinkEKSClusterSecurityGroup
  eksClusterSGInboundRule:
      Type: AWS::EC2::SecurityGroupIngress
      Properties:
        IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        SourceSecurityGroupId: !Ref eksClusterSG
        GroupId: !Ref eksClusterSG
  eksClusterOutboundRule:
      Type: AWS::EC2::SecurityGroupEgress
      Properties:
        IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        GroupId: !Ref eksClusterSG
        CidrIp: 0.0.0.0/0
  eksClusterRole:
      Type: 'AWS::IAM::Role'
      Description: EKS Cluster Role https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - eks.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Path: /
        ManagedPolicyArns:
          - !Ref EKSManagedPolicyArn
  eksNodeRole:
      Type: 'AWS::IAM::Role'
      Description: EKS Node Role https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Path: /
        ManagedPolicyArns:
          - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
          - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
  zepFlinkEKSCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: !Ref ClusterName
      Version: !Ref KubernetesVersion
      RoleArn: !GetAtt eksClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref eksClusterSG
        SubnetIds:
          - { "Fn::ImportValue": !Sub "${ParentVPCStack}-SubnetAPublic" }
          - { "Fn::ImportValue": !Sub "${ParentVPCStack}-SubnetBPublic" }
          - { "Fn::ImportValue": !Sub "${ParentVPCStack}-SubnetCPublic" }
  zepFlinkNodeGroup:
      Type: 'AWS::EKS::Nodegroup'
      DependsOn: zepFlinkEKSCluster
      Properties:
        ClusterName: !Ref ClusterName
        InstanceTypes:
          - !Ref NodeInstanceType
        DiskSize: !Ref NodeVolumeSize
        NodeRole: !GetAtt eksNodeRole.Arn
        ScalingConfig:
          MinSize: 3
          DesiredSize: 3
          MaxSize: 3
        Subnets:
          - { "Fn::ImportValue": !Sub "${ParentVPCStack}-SubnetAPublic" }
          - { "Fn::ImportValue": !Sub "${ParentVPCStack}-SubnetBPublic" }
          - { "Fn::ImportValue": !Sub "${ParentVPCStack}-SubnetCPublic" }
Outputs:
  Cluster:
    Value: !Ref zepFlinkEKSCluster
  NodeGroup:
    Value: !Ref zepFlinkNodeGroup
